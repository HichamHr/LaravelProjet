<?php
/**
 * Created by PhpStorm.
 * User: Charif
 * Date: 27/03/2016
 * Time: 05:11
 */

namespace app\OpenTest;


use JWTAuth;
use Tymon\JWTAuth\Exceptions\JWTException;
use Tymon\JWTAuth\Exceptions\TokenExpiredException;
use Tymon\JWTAuth\Exceptions\TokenInvalidException;

class Functions
{
    public function Hello_World(){
        return "Hello Class";
    }

    public static function ToJson($isOK,$Message,$object_name){
        $data = array();
        $final = array();
        $data['error'] = $isOK;
        $data['message'] = $Message;
        $final[$object_name] = $data;
    }

    public static function GetAuthUser(){
        try {

            if (! $user = JWTAuth::parseToken()->authenticate()) {
                return response()->json(['user_not_found'], 404);
            }

        } catch (TokenExpiredException $e) {

            return response()->json(['token_expired'], $e->getStatusCode());

        } catch (TokenInvalidException $e) {

            return response()->json(['token_invalid'], $e->getStatusCode());

        } catch (JWTException $e) {

            return response()->json(['token_absent'], $e->getStatusCode());

        }

        return $user;
    }
    
    public static function RefreshToken(){
        $user = JWTAuth::parseToken()->authenticate();
        return JWTAuth::fromUser($user);
    }
}